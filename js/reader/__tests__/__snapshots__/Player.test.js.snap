exports[`Player render 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "white",
          "flexDirection": "row",
          "height": 60,
          "justifyContent": "space-between",
          "paddingTop": 15,
          "width": 750,
        },
        undefined,
      ]
    }>
    <View
      style={
        Array [
          Object {
            "alignItems": "flex-start",
            "flex": 1,
            "paddingLeft": 10,
          },
          Object {
            "flex": 0,
            "paddingRight": 10,
          },
        ]
      }>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}>
        <Image
          source={1}
          style={
            Object {
              "height": 20,
              "resizeMode": "contain",
            }
          } />
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 4,
          },
          Object {
            "alignItems": "flex-start",
            "justifyContent": "center",
          },
        ]
      }>
      <View
        style={
          Object {
            "marginRight": 50,
          }
        }>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          numberOfLines={1}
          style={
            Object {
              "color": "rgb(249, 65, 92)",
              "fontSize": 14,
            }
          }>
          EP.
          99
           
          Asperiores quisquam
        </Text>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "rgba(249, 65, 92, 0.6)",
              "fontSize": 10,
            }
          }>
          อ่านแล้ว 
          0
           คน
        </Text>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "flex-end",
            "flex": 1,
            "paddingRight": 10,
          },
          undefined,
        ]
      }>
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hitSlop={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}>
          <Image
            source={1}
            style={
              Object {
                "height": 25,
                "marginRight": 10,
                "resizeMode": "contain",
                "width": 25,
              }
            } />
        </View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hitSlop={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}>
          <Image
            source={1}
            style={
              Object {
                "height": 25,
                "marginRight": 10,
                "resizeMode": "contain",
                "width": 25,
              }
            } />
        </View>
      </View>
    </View>
  </View>
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }>
    <Modal
      transparent={true}
      visible={true}>
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(255, 255, 255, 0.6)",
            "flex": 1,
            "justifyContent": "center",
          }
        }>
        <ActivityIndicator
          animating={true}
          color="#999999"
          hidesWhenStopped={true}
          size="large"
          style={
            Array [
              Object {
                "height": 80,
              },
            ]
          } />
      </View>
    </Modal>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail">
      Loading
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "height": 45,
      }
    }>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "opacity": 1,
        }
      }
      testID={undefined}>
      <Image
        source={1}
        style={
          Object {
            "height": 25,
            "resizeMode": "contain",
          }
        } />
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flex": 1.6,
          "flexDirection": "row",
          "justifyContent": "center",
          "opacity": 1,
        }
      }
      testID={undefined}>
      <Image
        source={1}
        style={
          Object {
            "height": 25,
            "resizeMode": "contain",
          }
        } />
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "rgba(0, 0, 0, 0.3)",
          }
        }>
        100
      </Text>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flex": 1.6,
          "flexDirection": "row",
          "justifyContent": "center",
          "opacity": 1,
        }
      }
      testID={undefined}>
      <Image
        source={1}
        style={
          Object {
            "height": 25,
            "resizeMode": "contain",
          }
        } />
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "rgba(0, 0, 0, 0.3)",
          }
        }>
        0
      </Text>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "opacity": 1,
        }
      }
      testID={undefined}>
      <Image
        source={1}
        style={
          Object {
            "height": 25,
            "resizeMode": "contain",
          }
        } />
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "opacity": 1,
        }
      }
      testID={undefined}>
      <Image
        source={1}
        style={
          Object {
            "height": 25,
            "resizeMode": "contain",
          }
        } />
    </View>
  </View>
</View>
`;

exports[`Player render loading 1`] = `null`;
